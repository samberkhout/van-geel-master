datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Plant {
  id         Int          @id @default(autoincrement())
  leverweek  Int
  soortId    Int
  soort      Soort        @relation(fields: [soortId], references: [id], onDelete: Cascade)
  Oppotten   Oppotten[]
  Trips      Trips[]
  ZiekZoeken ZiekZoeken[]
  scout      scout[]

  createdAt DateTime @default(now())
}

model Soort {
  id            Int         @id @default(autoincrement())
  naam          String
  leverancierId Int
  leverancier   Leverancier @relation(fields: [leverancierId], references: [id], onDelete: Cascade)

  planten    Plant[]
  oppotten   Oppotten[]
  trips      Trips[]
  ziekZoeken ZiekZoeken[]
  scouts     scout[]

  @@unique([leverancierId, naam])
}

model Oppotten {
  id            Int      @id @default(autoincrement())
  plantId       Int      @unique
  plant         Plant    @relation(fields: [plantId], references: [id])
  leverweek     Int
  soortId       Int
  soort         Soort    @relation(fields: [soortId], references: [id], onDelete: Cascade)
  aantalOpgepot Int
  aantalWeggooi Int
  redenWeggooi  String
  andereReden   String?
  createdAt     DateTime @default(now())
}

model Trips {
  id            Int      @id @default(autoincrement())
  plantId       Int      @unique
  plant         Plant    @relation(fields: [plantId], references: [id])
  soortId       Int
  soort         Soort    @relation(fields: [soortId], references: [id], onDelete: Cascade)
  leverweek     Int
  oppotweek     Int
  aantalPlanten Int
  locatie       Json
  createdAt     DateTime @default(now())
}

model ZiekZoeken {
  id            Int      @id @default(autoincrement())
  plantId       Int      @unique
  plant         Plant    @relation(fields: [plantId], references: [id])
  soortId       Int
  soort         Soort    @relation(fields: [soortId], references: [id], onDelete: Cascade)
  leverweek     Int
  aantalWeggooi Int
  redenWeggooi  String
  andereReden   String?
  createdAt     DateTime @default(now())
}

model scout {
  id        Int      @id @default(autoincrement())
  plantId   Int      @unique
  plant     Plant    @relation(fields: [plantId], references: [id])
  soortId   Int
  soort     Soort    @relation(fields: [soortId], references: [id], onDelete: Cascade)
  leverweek Int
  oppotweek Int
  bio       Int
  oorwoorm  Boolean
  createdAt DateTime @default(now())
}

model QSMgroei {
  id         Int    @id @default(autoincrement())
  weekNummer Int
  jaar       Int
  soort      String
  groei      Int
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  password  String?
  rol       Role     @default(USER)
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model Leverancier {
  id      Int     @id @default(autoincrement())
  naam    String  @unique
  soorten Soort[]
}
